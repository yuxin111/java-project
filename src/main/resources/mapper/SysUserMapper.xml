<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.core.mapper.SysUserMapper">

    <resultMap id="SysUserResult" type="com.example.demo.core.entity.SysUser">
        <id property="userId" column="user_id"></id>
        <result property="loginName" column="login_name"></result>
        <result property="password" column="password"></result>
        <result property="createBy" column="create_by"></result>
        <result property="createTime" column="create_time"></result>
        <result property="updateBy" column="update_by"></result>
        <result property="updateTime" column="update_time"></result>
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
    </resultMap>

    <resultMap id="RoleResult" type="com.example.demo.core.entity.SysRole">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="status" column="role_status"/>
    </resultMap>

    <sql id="selectUserVo">
        select
            u.user_id,u.login_name,u.password,u.create_by,u.create_time,u.update_by,u.update_time,
            r.role_id,r.role_name,r.status as role_status
        from sys_user u
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
    </sql>

    <select id="selectUserList" parameterType="com.example.demo.core.entity.SysUser" resultMap="SysUserResult">
        select
            distinct u.user_id,u.login_name,u.password,u.create_by,u.create_time,u.update_by,u.update_time
        from sys_user u
        <where>
            <if test="loginName != null and loginName != ''">
                and u.login_name like concat('%', #{loginName}, '%')
            </if>
        </where>
    </select>

    <select id="selectUserByLoginName" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.login_name = #{loginName}
    </select>

    <select id="selectUserByParams" parameterType="com.example.demo.core.entity.SysUser" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        <where>
            <if test="userId != null">
                and u.user_id != #{userId}
            </if>
            <if test="loginName != null and loginName != ''">
                and u.login_name = #{loginName}
            </if>
        </where>
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.user_id = #{userId}
    </select>


    <insert id="addUser" parameterType="com.example.demo.core.entity.SysUser" useGeneratedKeys="true"
            keyProperty="userId">
        insert into sys_user(
        <if test="loginName != null and loginName != ''">login_name,</if>
        <if test="password != null and password != ''">password,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="loginName != null and loginName != ''">#{loginName},</if>
        <if test="password != null and password != ''">#{password},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <update id="updateUser" parameterType="com.example.demo.core.entity.SysUser">
        update sys_user
        <set>
            <if test="loginName != null and loginName != ''">login_name = #{loginName},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where user_id = #{userId}
    </update>

    <delete id="deleteUserById" parameterType="Long">
        delete from sys_user where user_id = #{userId}
    </delete>

</mapper>